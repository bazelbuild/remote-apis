module(
    name = "bazel_remote_apis_example",
)

# C++ example dependencies; these are necessary if the project should build
# against generated REAPI C++ code
bazel_dep(name = "rules_cc", version = "0.0.9")

# Go example dependencies; these are necessary if the project should build
# against generated REAPI Go code
bazel_dep(name = "gazelle", version = "0.35.0")
bazel_dep(name = "rules_go", version = "0.44.2")

# Java example dependencies; these are necessary if the project should build
# against the generated REAPI Java code
bazel_dep(name = "rules_java", version = "7.3.2")

bazel_dep(name = "bazel_remote_apis", version = "0.0.0.rpg.version.placeholder")
local_path_override(
    module_name = "bazel_remote_apis",
    path = "../..",
)

bazel_dep(name = "toolchains_llvm", version = "0.10.3")
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm")
llvm.toolchain(
    # This is a version of LLVM that builds absl and upb successfully with their
    # default compile options.
    #
    # TODO: Update this to the latest version of LLVM possible
    llvm_version = "13.0.0",
)
use_repo(llvm, "llvm_toolchain")
register_toolchains("@llvm_toolchain//:all")

# TODO: Remove this once googleapis is a bzlmod module
bazel_dep(name = "com_google_googleapis", version = "64926d52febbf298cb82a8f472ade4a3969ba922")
archive_override(
    module_name = "com_google_googleapis",
    integrity = "sha256-nRqTDnZ8k8glOYuPhpLso/41O5qq3t+88fyiKCyF34g=",
    patch_strip = 1,
    patches = [
        "patches/googleapis_add_bzlmod_support.patch",
    ],
    strip_prefix = "googleapis-64926d52febbf298cb82a8f472ade4a3969ba922",
    urls = [
        "https://github.com/googleapis/googleapis/archive/64926d52febbf298cb82a8f472ade4a3969ba922.zip",
    ],
)

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "org_golang_google_genproto",
    "org_golang_google_genproto_googleapis_api",
    "org_golang_google_genproto_googleapis_rpc",
)
