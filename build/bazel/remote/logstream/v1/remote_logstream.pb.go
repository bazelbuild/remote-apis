// Code generated by protoc-gen-go. DO NOT EDIT.
// source: build/bazel/remote/logstream/v1/remote_logstream.proto

package remotelogstream

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateLogStreamRequest struct {
	Parent               string   `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLogStreamRequest) Reset()         { *m = CreateLogStreamRequest{} }
func (m *CreateLogStreamRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLogStreamRequest) ProtoMessage()    {}
func (*CreateLogStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f0669a0ed1df29a, []int{0}
}

func (m *CreateLogStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLogStreamRequest.Unmarshal(m, b)
}
func (m *CreateLogStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLogStreamRequest.Marshal(b, m, deterministic)
}
func (m *CreateLogStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLogStreamRequest.Merge(m, src)
}
func (m *CreateLogStreamRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLogStreamRequest.Size(m)
}
func (m *CreateLogStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLogStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLogStreamRequest proto.InternalMessageInfo

func (m *CreateLogStreamRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

type LogStream struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	WriteResourceName    string   `protobuf:"bytes,2,opt,name=write_resource_name,json=writeResourceName,proto3" json:"write_resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogStream) Reset()         { *m = LogStream{} }
func (m *LogStream) String() string { return proto.CompactTextString(m) }
func (*LogStream) ProtoMessage()    {}
func (*LogStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f0669a0ed1df29a, []int{1}
}

func (m *LogStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogStream.Unmarshal(m, b)
}
func (m *LogStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogStream.Marshal(b, m, deterministic)
}
func (m *LogStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogStream.Merge(m, src)
}
func (m *LogStream) XXX_Size() int {
	return xxx_messageInfo_LogStream.Size(m)
}
func (m *LogStream) XXX_DiscardUnknown() {
	xxx_messageInfo_LogStream.DiscardUnknown(m)
}

var xxx_messageInfo_LogStream proto.InternalMessageInfo

func (m *LogStream) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LogStream) GetWriteResourceName() string {
	if m != nil {
		return m.WriteResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateLogStreamRequest)(nil), "build.bazel.remote.logstream.v1.CreateLogStreamRequest")
	proto.RegisterType((*LogStream)(nil), "build.bazel.remote.logstream.v1.LogStream")
}

func init() {
	proto.RegisterFile("build/bazel/remote/logstream/v1/remote_logstream.proto", fileDescriptor_2f0669a0ed1df29a)
}

var fileDescriptor_2f0669a0ed1df29a = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x90, 0x42, 0xe7, 0x52, 0x5d, 0xa5, 0x88, 0x97, 0x4a, 0x4e, 0xe2, 0x61, 0x62,
	0x14, 0xf4, 0x1e, 0xaf, 0x45, 0xcb, 0xf6, 0xe6, 0x25, 0x6c, 0xea, 0x50, 0x02, 0x49, 0xb7, 0x9d,
	0x6c, 0xa2, 0xf8, 0x0c, 0x3e, 0x85, 0x47, 0x9f, 0x52, 0x9c, 0x84, 0x2d, 0x48, 0x21, 0xb7, 0xe4,
	0x9f, 0xef, 0x9b, 0xdd, 0x99, 0x85, 0x87, 0xbc, 0x29, 0xca, 0xb7, 0x38, 0x37, 0x9f, 0x54, 0xc6,
	0x4c, 0x95, 0x75, 0x14, 0x97, 0x76, 0x5d, 0x3b, 0x26, 0x53, 0xc5, 0x6d, 0xd2, 0x67, 0x99, 0xcf,
	0x70, 0xcb, 0xd6, 0x59, 0x35, 0x13, 0x0f, 0xc5, 0xc3, 0x8e, 0xc1, 0x3d, 0xd3, 0x26, 0xd1, 0x2d,
	0x4c, 0x9f, 0x98, 0x8c, 0xa3, 0xb9, 0x5d, 0x2f, 0x25, 0xd5, 0xb4, 0x6b, 0xa8, 0x76, 0x6a, 0x0a,
	0xa3, 0xad, 0x61, 0xda, 0xb8, 0x8b, 0xe0, 0x2a, 0xb8, 0x1e, 0xeb, 0xfe, 0x2f, 0x7a, 0x81, 0xb1,
	0x67, 0x95, 0x82, 0xe3, 0x8d, 0xa9, 0xa8, 0x47, 0xe4, 0x5b, 0x21, 0x9c, 0xbd, 0x73, 0xe1, 0x28,
	0x63, 0xaa, 0x6d, 0xc3, 0x2b, 0xca, 0x04, 0x09, 0x05, 0x39, 0x95, 0x92, 0xee, 0x2b, 0xcf, 0xa6,
	0xa2, 0xbb, 0xaf, 0x00, 0x4e, 0x7c, 0xc7, 0x25, 0x71, 0x5b, 0xac, 0x48, 0x7d, 0xc0, 0xe4, 0xdf,
	0xbd, 0xd4, 0x23, 0x0e, 0x0c, 0x83, 0x87, 0x27, 0xb9, 0xbc, 0x19, 0x14, 0xbd, 0x12, 0x1d, 0xa5,
	0x3b, 0x18, 0x5a, 0x5a, 0x7a, 0xae, 0x25, 0xf4, 0xd6, 0xe2, 0x6f, 0xd7, 0x8b, 0xe0, 0x75, 0xd2,
	0xc1, 0x9e, 0xfd, 0x0e, 0x43, 0x3d, 0xff, 0x09, 0x67, 0xa9, 0xf4, 0x4b, 0xa5, 0x5f, 0xa7, 0xee,
	0x4f, 0xc4, 0x36, 0xc9, 0x47, 0xf2, 0x58, 0xf7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x69, 0x79,
	0x53, 0x53, 0xe6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogStreamServiceClient is the client API for LogStreamService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogStreamServiceClient interface {
	CreateLogStream(ctx context.Context, in *CreateLogStreamRequest, opts ...grpc.CallOption) (*LogStream, error)
}

type logStreamServiceClient struct {
	cc *grpc.ClientConn
}

func NewLogStreamServiceClient(cc *grpc.ClientConn) LogStreamServiceClient {
	return &logStreamServiceClient{cc}
}

func (c *logStreamServiceClient) CreateLogStream(ctx context.Context, in *CreateLogStreamRequest, opts ...grpc.CallOption) (*LogStream, error) {
	out := new(LogStream)
	err := c.cc.Invoke(ctx, "/build.bazel.remote.logstream.v1.LogStreamService/CreateLogStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogStreamServiceServer is the server API for LogStreamService service.
type LogStreamServiceServer interface {
	CreateLogStream(context.Context, *CreateLogStreamRequest) (*LogStream, error)
}

// UnimplementedLogStreamServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLogStreamServiceServer struct {
}

func (*UnimplementedLogStreamServiceServer) CreateLogStream(ctx context.Context, req *CreateLogStreamRequest) (*LogStream, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLogStream not implemented")
}

func RegisterLogStreamServiceServer(s *grpc.Server, srv LogStreamServiceServer) {
	s.RegisterService(&_LogStreamService_serviceDesc, srv)
}

func _LogStreamService_CreateLogStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLogStreamRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogStreamServiceServer).CreateLogStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/build.bazel.remote.logstream.v1.LogStreamService/CreateLogStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogStreamServiceServer).CreateLogStream(ctx, req.(*CreateLogStreamRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogStreamService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "build.bazel.remote.logstream.v1.LogStreamService",
	HandlerType: (*LogStreamServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLogStream",
			Handler:    _LogStreamService_CreateLogStream_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "build/bazel/remote/logstream/v1/remote_logstream.proto",
}
